<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo建站指南及避坑</title>
    <url>/posts/6426.html</url>
    <content><![CDATA[<h2 id="1-Hexo介绍"><a href="#1-Hexo介绍" class="headerlink" title="1.Hexo介绍"></a>1.Hexo介绍</h2><blockquote>
<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
</blockquote>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>Hexo 官网: <a class="link" href="https://hexo.io/zh-cn/">Hexo官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</div>

<h2 id="2-Hexo安装"><a href="#2-Hexo安装" class="headerlink" title="2.Hexo安装"></a>2.Hexo安装</h2><div class="note-large notel-blue"><div class="notel-title"><p>依赖</p>
</div><div class="notel-content"><h3 id="2-1-安装依赖"><a href="#2-1-安装依赖" class="headerlink" title="2.1. 安装依赖"></a>2.1. 安装依赖</h3><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p>
<blockquote>
<p><a class="link" href="http://nodejs.org/">Node.js <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)<br><a class="link" href="http://git-scm.com/">Git <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<p>如果你已经下载上述环境，可以直接前往 <a href="#2-2-%E5%AE%89%E8%A3%85Hexo">安装Hexo</a> 步骤。</p>
<h4 id="2-1-1-安装Node-js"><a href="#2-1-1-安装Node-js" class="headerlink" title="2.1.1. 安装Node.js"></a>2.1.1. 安装Node.js</h4><p>Node.js 为大多数平台提供了官方的 <a class="link" href="https://nodejs.org/zh-cn/download/">安装程序 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。对于中国大陆地区用户，可以前往 <a class="link" href="https://npmmirror.com/mirrors/node/">淘宝 Node.js 镜像 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 下载。</p>
<p>其它的安装方法：</p>
<ul>
<li>Windows：通过 <a class="link" href="https://github.com/jasongin/nvs/">nvs <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>（推荐）或者 <a class="link" href="https://github.com/nvm-sh/nvm">nvm <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 安装。</li>
<li>Mac：使用 <a class="link" href="https://brew.sh/">Homebrew <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 或 <a class="link" href="http://www.macports.org/">MacPorts <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 安装。</li>
<li>Linux（DEB&#x2F;RPM-based）：从 <a class="link" href="https://github.com/nodesource/distributions">NodeSource <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 安装。</li>
<li>其它：使用相应的软件包管理器进行安装，可以参考由 Node.js 提供的 <a class="link" href="https://nodejs.org/zh-cn/download/package-manager/">指导 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。<br>对于 Mac 和 Linux 同样建议使用 nvs 或者 nvm，以避免可能会出现的权限问题。</li>
</ul>
<hr>
<div class="note-large notel-red"><div class="notel-title"><p>Windows用户</p>
</div><div class="notel-content"><p>使用 Node.js 官方安装程序时，请确保勾选 <strong>Add to PATH</strong> 选项（默认已勾选）</p>
 </div></div>
<div class="note-large notel-green"><div class="notel-title"><p>Mac&#x2F;Linux用户</p>
</div><div class="notel-content"><p>如果在尝试安装 Hexo 的过程中出现 EACCES 权限错误，请遵循 由 <a class="link" href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally">npmjs 发布的指导 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 修复该问题。强烈建议 不要 使用 root、sudo 等方法覆盖权限</p>
<hr>
<p>如果您使用 Snap 来安装 Node.js，在 <a href>初始化</a> 博客时您可能需要手动在目标文件夹中执行 <code>npm install</code>。</p>
 </div></div>

<h4 id="2-1-2-安装Git"><a href="#2-1-2-安装Git" class="headerlink" title="2.1.2. 安装Git"></a>2.1.2. 安装Git</h4><ul>
<li>Windows：下载并安装 <a class="link" href="https://git-scm.com/download/win">git <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</li>
<li>Mac：使用 <a class="link" href="http://mxcl.github.com/homebrew/">Homebrew <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, <a class="link" href="http://www.macports.org/">MacPorts <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 或者下载 <a class="link" href="http://sourceforge.net/projects/git-osx-installer/">安装程序 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</li>
<li>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code></li>
<li>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></li>
</ul>
<hr>
<div class="note-large notel-red"><div class="notel-title"><p>Windows用户</p>
</div><div class="notel-content"><p>对于中国大陆地区用户，可以前往 淘宝 <a class="link" href="https://npmmirror.com/mirrors/git-for-windows/">Git for Windows 镜像 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 下载 git 安装包。</p>
 </div></div>
<div class="note-large notel-green"><div class="notel-title"><p>Mac用户</p>
</div><div class="notel-content"><p>如果在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> 安装命令行工具。</p>
 </div></div>
 </div></div>

<div class="note-large notel-blue"><div class="notel-title"><p>安装</p>
</div><div class="notel-content"><h3 id="2-2-安装Hexo"><a href="#2-2-安装Hexo" class="headerlink" title="2.2. 安装Hexo"></a>2.2. 安装Hexo</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。<br><code>$ npm install -g hexo-cli</code><br>同时安装部署插件:<br><code>$ npm install hexo-deployer-git --save</code><br>待安装完成后，即可开始建站！<br><img lazyload src="/images/loading.svg" data-src="/posts/6426/1.png" class title="安装成功啦！"></p>
 </div></div>

<h2 id="3-Hexo建站"><a href="#3-Hexo建站" class="headerlink" title="3.Hexo建站"></a>3.Hexo建站</h2><div class="note-large notel-blue"><div class="notel-title"><p>创建博客目录</p>
</div><div class="notel-content"><h3 id="3-1-创建博客目录"><a href="#3-1-创建博客目录" class="headerlink" title="3.1. 创建博客目录"></a>3.1. 创建博客目录</h3><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件(&lt;folder&gt;表示你的博客根目录名)。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></div>

<p>新建完成后，指定文件夹的目录如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure></div>
<img lazyload src="/images/loading.svg" data-src="/posts/6426/2.png" class title="博客目录">

<blockquote>
<p>public目录下存放的是我们生成的「静态页面」<br>source&#x2F;_posts目录下存放的是我们写的「文章」<br>themes目录下存放的是「博客」的主题；<br>_config.yml是「博客全局配置」文件；<br>_config.landscape.yml是「博客主题配置」文件。</p>
</blockquote>
<p>具体每个文件与文件夹中文件的格式与作用详见<a class="link" href="https://hexo.io/zh-cn/docs/setup">官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>待初始化完成后，可以通过输入命令:<br><code>hexo s</code>或<code>hexo server</code>启动本地测试网站，之后在浏览器中输入<a class="link" href="http://localhost:4000/">http://localhost:4000/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 即可访问本地博客。<br><img lazyload src="/images/loading.svg" data-src="/posts/6426/3.png" class><br><img lazyload src="/images/loading.svg" data-src="/posts/6426/4.png" class title="本地网页"></p>
 </div></div>

<h3 id="3-2-部署到Github"><a href="#3-2-部署到Github" class="headerlink" title="3.2. 部署到Github"></a>3.2. 部署到Github</h3><div class="note-large notel-blue"><div class="notel-title"><p>部署到Github</p>
</div><div class="notel-content"><h4 id="3-2-1-配置Git"><a href="#3-2-1-配置Git" class="headerlink" title="3.2.1. 配置Git"></a>3.2.1. 配置Git</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name &quot;你的Github用户名&quot;</span><br><span class="line">$ git config --global user.email &quot;你的Github邮箱&quot;</span><br></pre></td></tr></table></figure></div>

<h4 id="3-2-2-生成SSH秘钥"><a href="#3-2-2-生成SSH秘钥" class="headerlink" title="3.2.2. 生成SSH秘钥"></a>3.2.2. 生成SSH秘钥</h4><p><code>$ ssh-keygen -t rsa -C &quot;你的Github邮箱&quot;</code><br>连续几次回车后，即可生成<code>id_rsa.pub</code>文件，按照目录提示打开并复制其中所有内容</p>
<h4 id="3-2-3-将秘钥粘贴入Github的个人设置中"><a href="#3-2-3-将秘钥粘贴入Github的个人设置中" class="headerlink" title="3.2.3. 将秘钥粘贴入Github的个人设置中"></a>3.2.3. 将秘钥粘贴入Github的个人设置中</h4><img lazyload src="/images/loading.svg" data-src="/posts/6426/5.png" class title="个人设置">
个人设置
<img lazyload src="/images/loading.svg" data-src="/posts/6426/6.png" class title="添加新SSH">

<p>添加新SSH</p>
<hr>
<p>检验:在控制台中输入<code>$ ssh -T git@github.com</code><br>当出现Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])? 输入yes等待，输出Hi xxx! You’ve successfully authenticated…时即连接成功。</p>
<h4 id="3-2-4-在Github中创建repository并配置"><a href="#3-2-4-在Github中创建repository并配置" class="headerlink" title="3.2.4. 在Github中创建repository并配置"></a>3.2.4. 在Github中创建repository并配置</h4><p>创建一个<code>用户名.github.io</code>的仓库(名字严格相同)。<br><img lazyload src="/images/loading.svg" data-src="/posts/6426/7.png" class title="创建仓库"></p>
<p>回到博客根目录中，打开<code>_config.yml</code>文件，在最后<code>deploy</code>中添加:</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:你的用户名/你的用户名.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></div>
<img lazyload src="/images/loading.svg" data-src="/posts/6426/8.png" class title="创建仓库">

<p>完成后在控制台中输入:</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo clean  # 清除缓存</span><br><span class="line">$ hexo d -g   # 生成静态网页并部署</span><br></pre></td></tr></table></figure></div>
<p>稍等一会后在浏览器中输入 https:&#x2F;&#x2F;你的用户名.github.io 即可看到你的博客了！</p>
 </div></div>

<h2 id="4-博客美化"><a href="#4-博客美化" class="headerlink" title="4. 博客美化"></a>4. 博客美化</h2><div class="note-large notel-blue"><div class="notel-title"><p>选择主题</p>
</div><div class="notel-content"><h3 id="4-1-配置主题"><a href="#4-1-配置主题" class="headerlink" title="4.1. 配置主题"></a>4.1. 配置主题</h3><p>打开Hexo的<a class="link" href="https://hexo.io/themes/">主题官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，选择一个你喜欢的好看的主题。对于不同的主题，其下载和具体配置方式均有所不同，建议阅读<a class="link" href="https://hexo.io/zh-cn/docs/themes">官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>与对应主题的官方文档。</p>
<h3 id="4-2-更换主题"><a href="#4-2-更换主题" class="headerlink" title="4.2. 更换主题"></a>4.2. 更换主题</h3><p>在<code>_config.yml</code>中，找到:<code>theme: landscape</code>，将其更换为你所选择的主题(例如:<code>theme: next</code>)即可(注意:主题的名字一定要与hexo-theme-xxx中的xxx一样)</p>
 </div></div>
<p>由此，你的博客就搭建完成啦！更多的美化方法与插件选择可以参考网络上的其他文章或自己摸索哦，祝所有看到这里的读者都可以搭建好自己的博客！</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>建站</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>数字系统基础笔记</title>
    <url>/posts/40135.html</url>
    <content><![CDATA[<h2 id="第1章-开关理论基础"><a href="#第1章-开关理论基础" class="headerlink" title="第1章. 开关理论基础"></a>第1章. 开关理论基础</h2><h3 id="1-1-二进制系统"><a href="#1-1-二进制系统" class="headerlink" title="1.1. 二进制系统"></a>1.1. 二进制系统</h3><h4 id="1-1-1-连续量和离散量"><a href="#1-1-1-连续量和离散量" class="headerlink" title="1.1.1. 连续量和离散量"></a>1.1.1. 连续量和离散量</h4><p><font size="5">电子电路分为<strong>模拟电子电路</strong>和<strong>数字电子电路</strong>两大类</font></p>
<div class="note-large notel-blue"><div class="notel-title"><p>模拟量</p>
</div><div class="notel-content"><p>模拟电子电路中，数值的度量采用直流电压或电流的连续值，通常称为<font color="lightblue">模拟量</font>。模拟量的特点是数值由<font color="lightblue">连续量</font>来表示，其运算过程也是连续的。</p>
 </div></div>

<div class="note-large notel-blue"><div class="notel-title"><p>离散量</p>
</div><div class="notel-content"><p>数字电子电路中，数值的度量采用数字量，它通常由0或1组成的一串二进制数组成。数字量的特点是数值为<font color="lightblue">离散量</font>，运算结果也是离散量。</p>
 </div></div>

<h4 id="1-1-2-开关量"><a href="#1-1-2-开关量" class="headerlink" title="1.1.2. 开关量"></a>1.1.2. 开关量</h4><div class="note-large notel-blue"><div class="notel-title"><p>开关量</p>
</div><div class="notel-content"><p>自然界中存在有二状态的物理元件，其中的两种不同状态可以用两种不同的电平：<strong>高电平(H)</strong> 或 <strong>低电平(L)</strong> 表示。这种二状态系统称为<font color="lightblue">二进制系统</font>，通常高电平H代表&quot;1&quot;，低电平L代表&quot;0&quot;。二进制系统中的两个数字1和0是一个<font color="lightblue">开关量</font>，常称为<font color="lightblue">比特</font>。在数字系统中，这两种状态的组合称为<font color="lightblue">码</font>。用来表示数字1和0的电平称为<font color="lightblue">逻辑电平</font>，用来描述开关量。</p>
 </div></div>

<h4 id="1-1-3-数字波形"><a href="#1-1-3-数字波形" class="headerlink" title="1.1.3. 数字波形"></a>1.1.3. 数字波形</h4><div class="note-large notel-blue"><div class="notel-title"><p>数字波形</p>
</div><div class="notel-content"><p>从基准线到高电平的电压值为脉冲幅度。<br>从脉冲幅度的10%到90%的时间t<sub>r</sub>为<font color="lightblue">上升时间</font>，从脉冲幅度的90%到10%的时间t<sub>f</sub>为<font color="lightblue">下降时间</font>。<br>上升沿50%到下降沿50%的时间t<sub>w</sub>为<font color="lightblue">脉冲宽度</font>，它是脉冲持续时间的度量。t<sub>r</sub>，t<sub>f</sub>，t<sub>w</sub>反映了数字电路的工作速度。<br><img lazyload src="/images/loading.svg" data-src="/posts/40135/1_5.png" class title="非理想状态下脉冲参数"><br>在周期性脉冲中，<font color="lightblue">脉冲周期T</font>定义为两个相邻的脉冲前沿之间的时间间隔，它是一个常数。<br><font color="lightblue">脉冲频率f</font>定义为脉冲周期T的倒数，它表示脉冲重复的速度，用Hz度量。<br><font color="lightblue">频宽比D(也叫占空系数)</font>定义为脉冲宽度t和脉冲周期T之比的百分数。</p>
 </div></div>

<h3 id="1-2-数制与码制"><a href="#1-2-数制与码制" class="headerlink" title="1.2. 数制与码制"></a>1.2. 数制与码制</h3>]]></content>
      <categories>
        <category>课程笔记</category>
      </categories>
      <tags>
        <tag>课程笔记</tag>
        <tag>数字系统</tag>
      </tags>
  </entry>
</search>
